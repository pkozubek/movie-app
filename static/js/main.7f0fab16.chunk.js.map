{"version":3,"sources":["api/api.js","store/action.js","components/searchBar/suggestions/singleSuggestion/singleSuggestion.js","components/searchBar/suggestions/suggestions.js","components/searchBar/SearchBar.js","components/movieContent/rating/rating.js","components/movieContent/placeholder/placeholder.js","components/movieContent/movieContent.js","containers/App.js","serviceWorker.js","store/reducer.js","index.js"],"names":["SUGGESTION_URL","MOVIE_URL","purpose","val","a","localUrl","axios","get","then","data","gatherMovieData","type","text","dispatch","gatherData","resp","message","movies","setSuggestions","movieData","undefined","setMovie","gatheredSuggestions","suggestions","movie","setInput","value","inputVal","singleSuggestion","click","title","image","onClick","className","alt","src","connect","renderedData","map","index","handleSuggestionClick","key","loadSuggestion","loadMovie","placeholder","handleSearch","onKeyDown","event","onChange","target","trim","length","rating","number","renderedStars","Array","e","emptyStars","summary","genre","join","Number","App","SearchBar","Boolean","window","location","hostname","match","initialState","reducer","state","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7f0fab16.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst SUGGESTION_URL =\r\n  \"https://movie-server-pk.herokuapp.com/movie/suggestion/\";\r\nconst MOVIE_URL = \"https://movie-server-pk.herokuapp.com/movie/name/\";\r\n\r\nexport async function gatherData(purpose, val) {\r\n  const localUrl = purpose === \"movie\" ? MOVIE_URL + val : SUGGESTION_URL + val;\r\n\r\n  const data = await axios.get(localUrl).then(({ data }) => {\r\n    return data;\r\n  });\r\n\r\n  return data;\r\n}\r\n","import { gatherData } from \"../api/api\";\r\n\r\nexport const gatherMovieData = (type, text) => {\r\n  return dispatch => {\r\n    gatherData(type, text).then(resp => {\r\n      const { message, movies } = resp;\r\n      if (message === \"Ok\") {\r\n        if (type === \"suggestion\") {\r\n          dispatch(setSuggestions(movies));\r\n        } else if (type === \"movie\") {\r\n          let [movieData] = movies;\r\n          if (movieData === undefined) movieData = null;\r\n          dispatch(setMovie(movieData));\r\n        }\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nexport const setSuggestions = gatheredSuggestions => {\r\n  return {\r\n    type: \"SET_SUGGESTION\",\r\n    suggestions: gatheredSuggestions\r\n  };\r\n};\r\n\r\nexport const setMovie = movieData => {\r\n  return {\r\n    type: \"SET_MOVIE\",\r\n    movie: movieData\r\n  };\r\n};\r\n\r\nexport const setInput = value => {\r\n  return {\r\n    type: \"SET_INPUT\",\r\n    inputVal: value\r\n  };\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./singleSuggestion.scss\";\r\n\r\nconst singleSuggestion = ({ data, click }) => {\r\n  const { title, image } = data;\r\n  return (\r\n    <div onClick={click} className=\"suggestion\">\r\n      <img alt={title} className=\"suggestion__image\" src={image}></img>\r\n      <p className=\"suggestion__title\">{title}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default singleSuggestion;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport SingleSuggestion from \"./singleSuggestion/singleSuggestion\";\r\nimport { setMovie, setSuggestions, setInput } from \"./../../../store/action\";\r\n\r\nimport \"./suggestions.scss\";\r\n\r\nconst suggestions = ({ suggestions, setMovie, setSuggestions, setInput }) => {\r\n  const maximumNumberOfSuggestions = 5;\r\n\r\n  const handleSuggestionClick = singleSuggestion => {\r\n    setMovie(singleSuggestion);\r\n    setSuggestions();\r\n    setInput(\"\");\r\n  };\r\n\r\n  const renderedData = suggestions.map((singleSuggestion, index) => {\r\n    if (index < maximumNumberOfSuggestions) {\r\n      return (\r\n        <SingleSuggestion\r\n          click={() => handleSuggestionClick(singleSuggestion)}\r\n          key={singleSuggestion.title}\r\n          data={singleSuggestion}\r\n        />\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  });\r\n  return <div className=\"suggestions\">{renderedData}</div>;\r\n};\r\n\r\nconst mapStateToProps = ({ suggestions }) => {\r\n  return {\r\n    suggestions: suggestions\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setMovie: movieData => dispatch(setMovie(movieData)),\r\n    setSuggestions: () => dispatch(setSuggestions([])),\r\n    setInput: val => dispatch(setInput(val))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(suggestions);\r\n","import React from \"react\";\r\nimport { FaSearch } from \"react-icons/fa\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./search.scss\";\r\nimport { gatherMovieData, setSuggestions, setInput } from \"../../store/action\";\r\nimport Suggestions from \"./suggestions/suggestions\";\r\n\r\nconst searchBar = ({\r\n  inputVal,\r\n  placeholder,\r\n  loadSuggestion,\r\n  setSuggestions,\r\n  setInput,\r\n  loadMovie\r\n}) => {\r\n  const handleInputChange = event => {\r\n    const { value } = event.target;\r\n    setInput(value);\r\n\r\n    if (value.trim().length > 0) {\r\n      loadSuggestion(value);\r\n    } else {\r\n      setSuggestions();\r\n    }\r\n  };\r\n\r\n  const handleSearch = inputVal => {\r\n    loadMovie(inputVal);\r\n    setInput(\"\");\r\n    setSuggestions();\r\n  };\r\n\r\n  const handleEnter = event => {\r\n    if (event.key === \"Enter\") {\r\n      handleSearch(inputVal);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"search\">\r\n      <button onClick={() => handleSearch(inputVal)} className=\"search__button\">\r\n        <FaSearch />\r\n      </button>\r\n      <input\r\n        onKeyDown={handleEnter}\r\n        value={inputVal}\r\n        onChange={handleInputChange}\r\n        className=\"search__input\"\r\n        placeholder={placeholder}\r\n      ></input>\r\n      <Suggestions />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    loadSuggestion: text => dispatch(gatherMovieData(\"suggestion\", text)),\r\n    setSuggestions: () => dispatch(setSuggestions([])),\r\n    setInput: val => dispatch(setInput(val)),\r\n    loadMovie: text => dispatch(gatherMovieData(\"movie\", text))\r\n  };\r\n};\r\n\r\nconst mapStateToProps = ({ inputVal }) => {\r\n  return {\r\n    inputVal: inputVal\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(searchBar);\r\n","import React from \"react\";\r\nimport { FaRegStar, FaStar } from \"react-icons/fa\";\r\nimport \"./rating.scss\";\r\n\r\nconst rating = ({ number }) => {\r\n  const maxNumberOfStars = 10;\r\n  const renderedStars = [...Array(number)].map((e, index) => {\r\n    return <FaStar key={`rated${index}`} />;\r\n  });\r\n\r\n  const emptyStars =\r\n    maxNumberOfStars - number > 0\r\n      ? [...Array(maxNumberOfStars - number)].map((e, index) => {\r\n          return <FaRegStar key={`notrated${index}`} />;\r\n        })\r\n      : null;\r\n\r\n  return (\r\n    <div className=\"rating\">\r\n      {renderedStars}\r\n      {emptyStars}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default rating;\r\n","import React from \"react\";\r\nimport { FaVideo } from \"react-icons/fa\";\r\n\r\nimport \"./placeholder.scss\";\r\n\r\nconst placeholder = () => {\r\n  return (\r\n    <div className=\"placeholder\">\r\n      <FaVideo className=\"placeholder__icon\" />\r\n      <p className=\"placeholder__text\">Search for some movie!</p>\r\n      <p className=\"placeholder__text\">\r\n        Remember that not every movie is in database\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default placeholder;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./movie.scss\";\r\nimport Rating from \"./rating/rating\";\r\nimport Placeholder from \"./placeholder/placeholder\";\r\n\r\nconst movieContent = ({ movie }) => {\r\n  let renderedData = <Placeholder />;\r\n\r\n  if (movie != null) {\r\n    const { title, image, summary, genre, rating } = movie;\r\n    renderedData = (\r\n      <>\r\n        <img alt={title} className=\"movie__image\" src={image}></img>\r\n        <div className=\"movie-description\">\r\n          <h1>{title}</h1>\r\n          <h2>Summary</h2>\r\n          <p>{summary}</p>\r\n          <h2>Genre</h2>\r\n          <p>{genre.join(\" , \")}</p>\r\n          <h2>Rating</h2>\r\n          <Rating number={Number(rating)} />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return <div className=\"movie\">{renderedData}</div>;\r\n};\r\n\r\nconst mapStateToProps = ({ movie }) => {\r\n  return {\r\n    movie: movie\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(movieContent);\r\n","import React from \"react\";\n\nimport SearchBar from \"../components/searchBar/SearchBar\";\nimport MovieContent from \"../components/movieContent/movieContent\";\n\nimport \"./App.scss\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SearchBar placeholder=\"Search Movie Title\" />\n      <MovieContent />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\r\n  suggestions: [],\r\n  movie: null,\r\n  inputVal: \"\"\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  const { type } = action;\r\n\r\n  switch (type) {\r\n    case \"SET_SUGGESTION\":\r\n      return { ...state, suggestions: action.suggestions };\r\n    case \"SET_MOVIE\":\r\n      return { ...state, movie: action.movie };\r\n    case \"SET_INPUT\":\r\n      return { ...state, inputVal: action.inputVal };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./containers/App\";\nimport \"./global.scss\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport reducer from \"./store/reducer\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}